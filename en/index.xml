<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>caphosra note</title><link>https://caphosra.net/en/</link><description>Recent content on caphosra note</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 07 Jan 2024 13:58:55 +0900</lastBuildDate><atom:link href="https://caphosra.net/en/index.xml" rel="self" type="application/rss+xml"/><item><title>[C# tips] #3 Run C# in interactive ways</title><link>https://caphosra.net/en/posts/2020-05-24-csharptips3/</link><pubDate>Sun, 24 May 2020 06:35:55 +0900</pubDate><guid>https://caphosra.net/en/posts/2020-05-24-csharptips3/</guid><description>&lt;p>You may use Python to do simple calculations. It&amp;rsquo;s very convenient to run interactively. But the same thing can be done with C#.&lt;br>
I will introduce how to do that.&lt;/p>
&lt;h2 id="what-is-an-interactive-form">
 What is an interactive form?
 &lt;a class="heading-link" href="#what-is-an-interactive-form">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;p>When a user inputs a statement or expression, the tool evaluates it.&lt;br>
That is the simplest introduction I think.&lt;br>
In Python, it looks like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#54b1c7">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#aa89ea">a&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#d19a66">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#54b1c7">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#aa89ea">a&lt;/span> &lt;span style="color:#54b1c7">*&lt;/span> &lt;span style="color:#aa89ea">a&lt;/span> &lt;span style="color:#54b1c7">*&lt;/span> &lt;span style="color:#d19a66">3.14&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#d19a66">314.0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It&amp;rsquo;s calculated on the spot, so it&amp;rsquo;s very useful as a way to execute a temporary code. (I use it when I want to judge whether the number is a prime number or not.)&lt;/p></description></item><item><title>[C# tips] #2 Access private members</title><link>https://caphosra.net/en/posts/2020-04-10-csharptips2/</link><pubDate>Sat, 02 May 2020 17:58:27 +0900</pubDate><guid>https://caphosra.net/en/posts/2020-04-10-csharptips2/</guid><description>&lt;p>I introduced C# Linq on the previous article &lt;a href="https://caphosra.net/en/posts/2020-03-20-onepoint-csharp/" >#1&lt;/a>.&lt;br>
Today&amp;rsquo;s theme is &amp;ldquo;Access private members&amp;rdquo;.&lt;/p>
&lt;h2 id="attention">
 Attention
 &lt;a class="heading-link" href="#attention">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;p>This article will show you how to use &lt;code>System.Reflection&lt;/code> to access private members. However, please do so at your own risk. (It&amp;rsquo;s not a dangerous operation, but if you do it for codes other people wrote, it can be a copyright infringement.)&lt;/p>
&lt;h2 id="ill-show-give-a-quiz-to-you">
 I&amp;rsquo;ll show give a quiz to you!
 &lt;a class="heading-link" href="#ill-show-give-a-quiz-to-you">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;p>You have been given a variable of the following class.&lt;br>
Apparently there is a float variable in this class, which is initialized with a secret value.&lt;br>
Mr. Capra wants to know the secret value because he loves to reveal secrets.&lt;br>
How can he get a secret value?&lt;/p></description></item><item><title>[LLVM] How to show a float value by using printf</title><link>https://caphosra.net/en/posts/2020-04-09-llvm-printf-float/</link><pubDate>Sat, 02 May 2020 11:39:02 +0900</pubDate><guid>https://caphosra.net/en/posts/2020-04-09-llvm-printf-float/</guid><description>&lt;p>I will introduce how to generate LLVM IR that displays the float type variable by using LLVM&amp;rsquo;s C++ API.&lt;/p>
&lt;h2 id="my-environment">
 My environment
 &lt;a class="heading-link" href="#my-environment">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>LLVM: LLVM 9.0.1&lt;/li>
&lt;li>Compiler: cl.exe (included in Visual Studio 2019)&lt;/li>
&lt;/ul>
&lt;h2 id="what-we-want">
 What we want
 &lt;a class="heading-link" href="#what-we-want">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;p>The goal of this time is to output an LLVM IR that behaves the same as the following C program.
Add two float values together and do printf.&lt;/p></description></item><item><title>[LLVM] How to solve CreateGlobalStringPtr crash</title><link>https://caphosra.net/en/posts/2020-05-02-llvm-string-ptr/</link><pubDate>Sat, 02 May 2020 07:51:32 +0900</pubDate><guid>https://caphosra.net/en/posts/2020-05-02-llvm-string-ptr/</guid><description>&lt;p>I encountered the situaton that CreateGlobalStringPtr failed in the block of if statement, so I will introduce the way to solve it. (Also I found it had been my fault, but you can be.)&lt;/p>
&lt;h2 id="the-error-that-occurred">
 The error that occurred
 &lt;a class="heading-link" href="#the-error-that-occurred">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;p>First, let&amp;rsquo;s implement if statements frankly.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#b0c4de;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-C++" data-lang="C++">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">auto&lt;/span> &lt;span style="color:#aa89ea">ifblock&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">llvm&lt;/span>&lt;span style="color:#54b1c7">::&lt;/span>&lt;span style="color:#aa89ea">BasicBlock&lt;/span>&lt;span style="color:#54b1c7">::&lt;/span>&lt;span style="color:#aa89ea">Create&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">module&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">getContext&lt;/span>&lt;span style="color:#abb2bf">(),&lt;/span> &lt;span style="color:#98c379">&amp;#34;then&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#76a9f9">auto&lt;/span> &lt;span style="color:#aa89ea">mergeblock&lt;/span> &lt;span style="color:#54b1c7">=&lt;/span> &lt;span style="color:#aa89ea">llvm&lt;/span>&lt;span style="color:#54b1c7">::&lt;/span>&lt;span style="color:#aa89ea">BasicBlock&lt;/span>&lt;span style="color:#54b1c7">::&lt;/span>&lt;span style="color:#aa89ea">Create&lt;/span>&lt;span style="color:#abb2bf">(&lt;/span>&lt;span style="color:#aa89ea">module&lt;/span>&lt;span style="color:#54b1c7">-&amp;gt;&lt;/span>&lt;span style="color:#aa89ea">getContext&lt;/span>&lt;span style="color:#abb2bf">(),&lt;/span> &lt;span style="color:#98c379">&amp;#34;merged&amp;#34;&lt;/span>&lt;span style="color:#abb2bf">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is the part where we declare two Basic Blocks, one will be the inside of the if statement and the other will be the bottom of the end of the if statement.&lt;/p></description></item><item><title>Create a button whose background is filled by images on Avalonia UI</title><link>https://caphosra.net/en/posts/2020-03-29-avalonia-image-button/</link><pubDate>Tue, 31 Mar 2020 11:34:47 +0900</pubDate><guid>https://caphosra.net/en/posts/2020-03-29-avalonia-image-button/</guid><description>&lt;p>On this article, I will describe how to create a button whose background is filled by images on a crossplatform GUI library, Avalonia UI.&lt;/p>
&lt;img src="https://caphosra.net/images/2020-03-29/ButtonClick2.gif" alt="On button clicked (Successed)" class="center" width="438" height="211" />
&lt;p>I had a harder time to make it than I had expected. I beleive that this saves your time.&lt;/p>
&lt;h2 id="precondition">
 Precondition
 &lt;a class="heading-link" href="#precondition">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>You have an Avalonia project already.&lt;/li>
&lt;li>You have finished to choose images to use already.&lt;/li>
&lt;/ul>
&lt;p>I recommend you to prepare three images, normal, hovering, clicking.&lt;br>
Indeed, you can do it with just one image.&lt;/p></description></item><item><title>[C# tips] #1 Operate arrays like SQL</title><link>https://caphosra.net/en/posts/2020-03-20-onepoint-csharp/</link><pubDate>Mon, 30 Mar 2020 14:15:06 +0900</pubDate><guid>https://caphosra.net/en/posts/2020-03-20-onepoint-csharp/</guid><description>&lt;blockquote>
&lt;p>C# is not useful than Java. Why don&amp;rsquo;t we use Java, which runs on 3 billion devices!&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Well&amp;hellip; C#? Is it used to call Win API&amp;hellip;?&lt;/p>
&lt;/blockquote>
&lt;p>These are what I have really been told about C#.&lt;br>
When I listened them, I realized that many people haven&amp;rsquo;t ever touched C# yet. Indeed, there are situations where you should not use C#. I think, however, there should be much more people who use C# even considering it.&lt;br>
I have thought deeply and dicided: &amp;ldquo;I&amp;rsquo;m going to show C# tips everyday on my blog!&amp;rdquo;&lt;/p></description></item><item><title>Install lli, a tool of LLVM, to Windows</title><link>https://caphosra.net/en/posts/llvm-lli-install/</link><pubDate>Sun, 08 Mar 2020 09:12:43 +0900</pubDate><guid>https://caphosra.net/en/posts/llvm-lli-install/</guid><description>&lt;img src="https://llvm.org/img/LLVM-Logo-Derivative-1.png" alt="LLVM logo" class="center" width="256" height="256" />
&lt;p>Good morning! I&amp;rsquo;m capra314cabra, who am under making new language.&lt;br>
On this article, I will tell you how to get tools of LLVM. You might think it should be easy but I felt not.
I hope you read this and save huge amount of time from reading heap of documents.&lt;/p>
&lt;h2 id="tldr">
 TL;DR
 &lt;a class="heading-link" href="#tldr">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;p>At last, I downloaded and built all the code of LLVM on my PC.
And I got tools of LLVM, including &lt;code>lli&lt;/code>.&lt;/p></description></item><item><title>How to use 'sudo' in Powershell</title><link>https://caphosra.net/en/posts/powershell-sudo/</link><pubDate>Thu, 12 Dec 2019 10:47:01 +0900</pubDate><guid>https://caphosra.net/en/posts/powershell-sudo/</guid><description>&lt;p>In this article, I will explain how to implement a command like &lt;code>sudo&lt;/code> on Powershell.&lt;/p>
&lt;p>On Powershell, there are no command with which you can run other commands as a administrator. And if you want to do something as a administrator, you have to open a administrator&amp;rsquo;s Powershell by GUI.&lt;br>
It&amp;rsquo;s troublesome! I wish we always want to do everything on CUI!&lt;/p>
&lt;p>I hope this article helps many people.&lt;/p>
&lt;h2 id="plan">
 Plan
 &lt;a class="heading-link" href="#plan">
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading">&lt;/i>
 &lt;span class="sr-only">Link to heading&lt;/span>
 &lt;/a>
&lt;/h2>
&lt;p>Implement a function that is similar to &lt;code>sudo&lt;/code> and set it as a Powershell alias.&lt;/p></description></item></channel></rss>